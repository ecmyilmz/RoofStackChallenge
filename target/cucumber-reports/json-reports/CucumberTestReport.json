[
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2022-07-01T14:13:01.302Z",
        "line": 13,
        "name": "Verify success scenarios with creating users with valid credentials",
        "description": "",
        "id": "postusers;verify-success-scenarios-with-creating-users-with-valid-credentials;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 312000000,
              "status": "passed"
            },
            "line": 5,
            "name": "My path is \"/users/\"",
            "match": {
              "arguments": [
                {
                  "val": "/users/",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 90000000,
              "status": "passed"
            },
            "line": 6,
            "name": "I request create with \"jane\", \"doe\", \"doejj\", \"123456Aa*\"",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 23
                },
                {
                  "val": "doe",
                  "offset": 31
                },
                {
                  "val": "doejj",
                  "offset": 38
                },
                {
                  "val": "123456Aa*",
                  "offset": 47
                }
              ],
              "location": "steps.CREATEUsers.iRequestCreateWith(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1971000000,
              "status": "passed"
            },
            "line": 7,
            "name": "I send POST method",
            "match": {
              "location": "steps.BaseStepDefs.iSendPOSTMethod()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 208000000,
              "status": "passed"
            },
            "line": 8,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 9,
            "name": "I should see status code \"200\"",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:04.293Z",
        "line": 14,
        "name": "Verify success scenarios with creating users with valid credentials",
        "description": "",
        "id": "postusers;verify-success-scenarios-with-creating-users-with-valid-credentials;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 5,
            "name": "My path is \"/users/\"",
            "match": {
              "arguments": [
                {
                  "val": "/users/",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 6,
            "name": "I request create with \"ja\", \"doe\", \"doejj\", \"123456Aa*\"",
            "match": {
              "arguments": [
                {
                  "val": "ja",
                  "offset": 23
                },
                {
                  "val": "doe",
                  "offset": 29
                },
                {
                  "val": "doejj",
                  "offset": 36
                },
                {
                  "val": "123456Aa*",
                  "offset": 45
                }
              ],
              "location": "steps.CREATEUsers.iRequestCreateWith(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1103000000,
              "status": "passed"
            },
            "line": 7,
            "name": "I send POST method",
            "match": {
              "location": "steps.BaseStepDefs.iSendPOSTMethod()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "line": 8,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 9,
            "name": "I should see status code \"200\"",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:05.423Z",
        "line": 15,
        "name": "Verify success scenarios with creating users with valid credentials",
        "description": "",
        "id": "postusers;verify-success-scenarios-with-creating-users-with-valid-credentials;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 5,
            "name": "My path is \"/users/\"",
            "match": {
              "arguments": [
                {
                  "val": "/users/",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 6,
            "name": "I request create with \"janejanejanejanejanejanejanejanejanejanejanejaneja\", \"doe\", \"doejj\", \"123456Aa*\"",
            "match": {
              "arguments": [
                {
                  "val": "janejanejanejanejanejanejanejanejanejanejanejaneja",
                  "offset": 23
                },
                {
                  "val": "doe",
                  "offset": 77
                },
                {
                  "val": "doejj",
                  "offset": 84
                },
                {
                  "val": "123456Aa*",
                  "offset": 93
                }
              ],
              "location": "steps.CREATEUsers.iRequestCreateWith(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1037000000,
              "status": "passed"
            },
            "line": 7,
            "name": "I send POST method",
            "match": {
              "location": "steps.BaseStepDefs.iSendPOSTMethod()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "line": 8,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 9,
            "name": "I should see status code \"200\"",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:06.479Z",
        "line": 16,
        "name": "Verify success scenarios with creating users with valid credentials",
        "description": "",
        "id": "postusers;verify-success-scenarios-with-creating-users-with-valid-credentials;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 5,
            "name": "My path is \"/users/\"",
            "match": {
              "arguments": [
                {
                  "val": "/users/",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 6,
            "name": "I request create with \"jane\", \"do\", \"doejj\", \"123456Aa*\"",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 23
                },
                {
                  "val": "do",
                  "offset": 31
                },
                {
                  "val": "doejj",
                  "offset": 37
                },
                {
                  "val": "123456Aa*",
                  "offset": 46
                }
              ],
              "location": "steps.CREATEUsers.iRequestCreateWith(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1044000000,
              "status": "passed"
            },
            "line": 7,
            "name": "I send POST method",
            "match": {
              "location": "steps.BaseStepDefs.iSendPOSTMethod()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "line": 8,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 9,
            "name": "I should see status code \"200\"",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:07.550Z",
        "line": 17,
        "name": "Verify success scenarios with creating users with valid credentials",
        "description": "",
        "id": "postusers;verify-success-scenarios-with-creating-users-with-valid-credentials;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 5,
            "name": "My path is \"/users/\"",
            "match": {
              "arguments": [
                {
                  "val": "/users/",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 6,
            "name": "I request create with \"jane\", \"doedoedoedoedoedoedoedoedoedoedoedoedoedoedoedoedo\", \"doejj\", \"123456Aa*\"",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 23
                },
                {
                  "val": "doedoedoedoedoedoedoedoedoedoedoedoedoedoedoedoedo",
                  "offset": 31
                },
                {
                  "val": "doejj",
                  "offset": 85
                },
                {
                  "val": "123456Aa*",
                  "offset": 94
                }
              ],
              "location": "steps.CREATEUsers.iRequestCreateWith(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1037000000,
              "status": "passed"
            },
            "line": 7,
            "name": "I send POST method",
            "match": {
              "location": "steps.BaseStepDefs.iSendPOSTMethod()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "line": 8,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "I should see status code \"200\"",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:08.608Z",
        "line": 18,
        "name": "Verify success scenarios with creating users with valid credentials",
        "description": "",
        "id": "postusers;verify-success-scenarios-with-creating-users-with-valid-credentials;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 5,
            "name": "My path is \"/users/\"",
            "match": {
              "arguments": [
                {
                  "val": "/users/",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 6,
            "name": "I request create with \"jane\", \"doe\", \"doej\", \"123456Aa*\"",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 23
                },
                {
                  "val": "doe",
                  "offset": 31
                },
                {
                  "val": "doej",
                  "offset": 38
                },
                {
                  "val": "123456Aa*",
                  "offset": 46
                }
              ],
              "location": "steps.CREATEUsers.iRequestCreateWith(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1092000000,
              "status": "passed"
            },
            "line": 7,
            "name": "I send POST method",
            "match": {
              "location": "steps.BaseStepDefs.iSendPOSTMethod()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "line": 8,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "I should see status code \"200\"",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:09.718Z",
        "line": 19,
        "name": "Verify success scenarios with creating users with valid credentials",
        "description": "",
        "id": "postusers;verify-success-scenarios-with-creating-users-with-valid-credentials;;8",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 5,
            "name": "My path is \"/users/\"",
            "match": {
              "arguments": [
                {
                  "val": "/users/",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "line": 6,
            "name": "I request create with \"jane\", \"doe\", \"doejjdoejjdo\", \"123456Aa*\"",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 23
                },
                {
                  "val": "doe",
                  "offset": 31
                },
                {
                  "val": "doejjdoejjdo",
                  "offset": 38
                },
                {
                  "val": "123456Aa*",
                  "offset": 54
                }
              ],
              "location": "steps.CREATEUsers.iRequestCreateWith(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1086000000,
              "status": "passed"
            },
            "line": 7,
            "name": "I send POST method",
            "match": {
              "location": "steps.BaseStepDefs.iSendPOSTMethod()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "line": 8,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 9,
            "name": "I should see status code \"200\"",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:10.823Z",
        "line": 20,
        "name": "Verify success scenarios with creating users with valid credentials",
        "description": "",
        "id": "postusers;verify-success-scenarios-with-creating-users-with-valid-credentials;;9",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 5,
            "name": "My path is \"/users/\"",
            "match": {
              "arguments": [
                {
                  "val": "/users/",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "line": 6,
            "name": "I request create with \"jane\", \"doe\", \"doejj12\", \"123456Aa*\"",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 23
                },
                {
                  "val": "doe",
                  "offset": 31
                },
                {
                  "val": "doejj12",
                  "offset": 38
                },
                {
                  "val": "123456Aa*",
                  "offset": 49
                }
              ],
              "location": "steps.CREATEUsers.iRequestCreateWith(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1132000000,
              "status": "passed"
            },
            "line": 7,
            "name": "I send POST method",
            "match": {
              "location": "steps.BaseStepDefs.iSendPOSTMethod()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "line": 8,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 9,
            "name": "I should see status code \"200\"",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:11.975Z",
        "line": 21,
        "name": "Verify success scenarios with creating users with valid credentials",
        "description": "",
        "id": "postusers;verify-success-scenarios-with-creating-users-with-valid-credentials;;10",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 5,
            "name": "My path is \"/users/\"",
            "match": {
              "arguments": [
                {
                  "val": "/users/",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "line": 6,
            "name": "I request create with \"jane\", \"doe\", \"doejj?\", \"123456Aa*\"",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 23
                },
                {
                  "val": "doe",
                  "offset": 31
                },
                {
                  "val": "doejj?",
                  "offset": 38
                },
                {
                  "val": "123456Aa*",
                  "offset": 48
                }
              ],
              "location": "steps.CREATEUsers.iRequestCreateWith(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 962000000,
              "status": "passed"
            },
            "line": 7,
            "name": "I send POST method",
            "match": {
              "location": "steps.BaseStepDefs.iSendPOSTMethod()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "line": 8,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 9,
            "name": "I should see status code \"200\"",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:12.962Z",
        "line": 22,
        "name": "Verify success scenarios with creating users with valid credentials",
        "description": "",
        "id": "postusers;verify-success-scenarios-with-creating-users-with-valid-credentials;;11",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 5,
            "name": "My path is \"/users/\"",
            "match": {
              "arguments": [
                {
                  "val": "/users/",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 6,
            "name": "I request create with \"jane\", \"doe\", \"12345\", \"123456Aa*\"",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 23
                },
                {
                  "val": "doe",
                  "offset": 31
                },
                {
                  "val": "12345",
                  "offset": 38
                },
                {
                  "val": "123456Aa*",
                  "offset": 47
                }
              ],
              "location": "steps.CREATEUsers.iRequestCreateWith(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1039000000,
              "status": "passed"
            },
            "line": 7,
            "name": "I send POST method",
            "match": {
              "location": "steps.BaseStepDefs.iSendPOSTMethod()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "line": 8,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 9,
            "name": "I should see status code \"200\"",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:14.024Z",
        "line": 33,
        "name": "Verify non-success scenarios when creating a user with an invalid user credentials",
        "description": "",
        "id": "postusers;verify-non-success-scenarios-when-creating-a-user-with-an-invalid-user-credentials;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 25,
            "name": "My path is \"/users/\"",
            "match": {
              "arguments": [
                {
                  "val": "/users/",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 26,
            "name": "I request create with \"\", \"doe\", \"doejj\", \"123456Aa*\"",
            "match": {
              "arguments": [
                {
                  "val": "",
                  "offset": 23
                },
                {
                  "val": "doe",
                  "offset": 27
                },
                {
                  "val": "doejj",
                  "offset": 34
                },
                {
                  "val": "123456Aa*",
                  "offset": 43
                }
              ],
              "location": "steps.CREATEUsers.iRequestCreateWith(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1095000000,
              "status": "passed"
            },
            "line": 27,
            "name": "I send POST method",
            "match": {
              "location": "steps.BaseStepDefs.iSendPOSTMethod()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "line": 28,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: \nExpected: \"400\"\n     but: was \"200\"\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat steps.BaseStepDefs.iShouldSeeStatusCode(BaseStepDefs.java:28)\n\tat ✽.I should see status code \"400\"(file:///Users/ecemyilmaz/Desktop/RestAssured_/src/test/java/features/CREATEUsers.feature:29)\n",
              "duration": 2000000,
              "status": "failed"
            },
            "line": 29,
            "name": "I should see status code \"400\"",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:15.154Z",
        "line": 34,
        "name": "Verify non-success scenarios when creating a user with an invalid user credentials",
        "description": "",
        "id": "postusers;verify-non-success-scenarios-when-creating-a-user-with-an-invalid-user-credentials;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 25,
            "name": "My path is \"/users/\"",
            "match": {
              "arguments": [
                {
                  "val": "/users/",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 26,
            "name": "I request create with \"j\", \"doe\", \"doejj\", \"123456Aa*\"",
            "match": {
              "arguments": [
                {
                  "val": "j",
                  "offset": 23
                },
                {
                  "val": "doe",
                  "offset": 28
                },
                {
                  "val": "doejj",
                  "offset": 35
                },
                {
                  "val": "123456Aa*",
                  "offset": 44
                }
              ],
              "location": "steps.CREATEUsers.iRequestCreateWith(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1022000000,
              "status": "passed"
            },
            "line": 27,
            "name": "I send POST method",
            "match": {
              "location": "steps.BaseStepDefs.iSendPOSTMethod()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "line": 28,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: \nExpected: \"400\"\n     but: was \"200\"\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat steps.BaseStepDefs.iShouldSeeStatusCode(BaseStepDefs.java:28)\n\tat ✽.I should see status code \"400\"(file:///Users/ecemyilmaz/Desktop/RestAssured_/src/test/java/features/CREATEUsers.feature:29)\n",
              "duration": 1000000,
              "status": "failed"
            },
            "line": 29,
            "name": "I should see status code \"400\"",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:16.199Z",
        "line": 35,
        "name": "Verify non-success scenarios when creating a user with an invalid user credentials",
        "description": "",
        "id": "postusers;verify-non-success-scenarios-when-creating-a-user-with-an-invalid-user-credentials;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 25,
            "name": "My path is \"/users/\"",
            "match": {
              "arguments": [
                {
                  "val": "/users/",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "line": 26,
            "name": "I request create with \"123\", \"doe\", \"doejj\", \"123456Aa*\"",
            "match": {
              "arguments": [
                {
                  "val": "123",
                  "offset": 23
                },
                {
                  "val": "doe",
                  "offset": 30
                },
                {
                  "val": "doejj",
                  "offset": 37
                },
                {
                  "val": "123456Aa*",
                  "offset": 46
                }
              ],
              "location": "steps.CREATEUsers.iRequestCreateWith(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 967000000,
              "status": "passed"
            },
            "line": 27,
            "name": "I send POST method",
            "match": {
              "location": "steps.BaseStepDefs.iSendPOSTMethod()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "line": 28,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: \nExpected: \"400\"\n     but: was \"200\"\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat steps.BaseStepDefs.iShouldSeeStatusCode(BaseStepDefs.java:28)\n\tat ✽.I should see status code \"400\"(file:///Users/ecemyilmaz/Desktop/RestAssured_/src/test/java/features/CREATEUsers.feature:29)\n",
              "duration": 1000000,
              "status": "failed"
            },
            "line": 29,
            "name": "I should see status code \"400\"",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:17.187Z",
        "line": 36,
        "name": "Verify non-success scenarios when creating a user with an invalid user credentials",
        "description": "",
        "id": "postusers;verify-non-success-scenarios-when-creating-a-user-with-an-invalid-user-credentials;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 25,
            "name": "My path is \"/users/\"",
            "match": {
              "arguments": [
                {
                  "val": "/users/",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 26,
            "name": "I request create with \"jane?\", \"doe\", \"doejj\", \"123456Aa*\"",
            "match": {
              "arguments": [
                {
                  "val": "jane?",
                  "offset": 23
                },
                {
                  "val": "doe",
                  "offset": 32
                },
                {
                  "val": "doejj",
                  "offset": 39
                },
                {
                  "val": "123456Aa*",
                  "offset": 48
                }
              ],
              "location": "steps.CREATEUsers.iRequestCreateWith(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1027000000,
              "status": "passed"
            },
            "line": 27,
            "name": "I send POST method",
            "match": {
              "location": "steps.BaseStepDefs.iSendPOSTMethod()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "line": 28,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: \nExpected: \"400\"\n     but: was \"200\"\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat steps.BaseStepDefs.iShouldSeeStatusCode(BaseStepDefs.java:28)\n\tat ✽.I should see status code \"400\"(file:///Users/ecemyilmaz/Desktop/RestAssured_/src/test/java/features/CREATEUsers.feature:29)\n",
              "duration": 2000000,
              "status": "failed"
            },
            "line": 29,
            "name": "I should see status code \"400\"",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:18.240Z",
        "line": 37,
        "name": "Verify non-success scenarios when creating a user with an invalid user credentials",
        "description": "",
        "id": "postusers;verify-non-success-scenarios-when-creating-a-user-with-an-invalid-user-credentials;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 25,
            "name": "My path is \"/users/\"",
            "match": {
              "arguments": [
                {
                  "val": "/users/",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "line": 26,
            "name": "I request create with \"janejanejanejanejanejanejanejanejanejanejanejanejan\", \"doe\", \"doejj\", \"123456Aa*\"",
            "match": {
              "arguments": [
                {
                  "val": "janejanejanejanejanejanejanejanejanejanejanejanejan",
                  "offset": 23
                },
                {
                  "val": "doe",
                  "offset": 78
                },
                {
                  "val": "doejj",
                  "offset": 85
                },
                {
                  "val": "123456Aa*",
                  "offset": 94
                }
              ],
              "location": "steps.CREATEUsers.iRequestCreateWith(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 935000000,
              "status": "passed"
            },
            "line": 27,
            "name": "I send POST method",
            "match": {
              "location": "steps.BaseStepDefs.iSendPOSTMethod()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "line": 28,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: \nExpected: \"400\"\n     but: was \"200\"\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat steps.BaseStepDefs.iShouldSeeStatusCode(BaseStepDefs.java:28)\n\tat ✽.I should see status code \"400\"(file:///Users/ecemyilmaz/Desktop/RestAssured_/src/test/java/features/CREATEUsers.feature:29)\n",
              "duration": 1000000,
              "status": "failed"
            },
            "line": 29,
            "name": "I should see status code \"400\"",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:19.197Z",
        "line": 38,
        "name": "Verify non-success scenarios when creating a user with an invalid user credentials",
        "description": "",
        "id": "postusers;verify-non-success-scenarios-when-creating-a-user-with-an-invalid-user-credentials;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "line": 25,
            "name": "My path is \"/users/\"",
            "match": {
              "arguments": [
                {
                  "val": "/users/",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "line": 26,
            "name": "I request create with \"jane\", \"\", \"doejj\", \"123456Aa*\"",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 23
                },
                {
                  "val": "",
                  "offset": 31
                },
                {
                  "val": "doejj",
                  "offset": 35
                },
                {
                  "val": "123456Aa*",
                  "offset": 44
                }
              ],
              "location": "steps.CREATEUsers.iRequestCreateWith(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1049000000,
              "status": "passed"
            },
            "line": 27,
            "name": "I send POST method",
            "match": {
              "location": "steps.BaseStepDefs.iSendPOSTMethod()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "line": 28,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: \nExpected: \"400\"\n     but: was \"200\"\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat steps.BaseStepDefs.iShouldSeeStatusCode(BaseStepDefs.java:28)\n\tat ✽.I should see status code \"400\"(file:///Users/ecemyilmaz/Desktop/RestAssured_/src/test/java/features/CREATEUsers.feature:29)\n",
              "duration": 1000000,
              "status": "failed"
            },
            "line": 29,
            "name": "I should see status code \"400\"",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:20.274Z",
        "line": 39,
        "name": "Verify non-success scenarios when creating a user with an invalid user credentials",
        "description": "",
        "id": "postusers;verify-non-success-scenarios-when-creating-a-user-with-an-invalid-user-credentials;;8",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 25,
            "name": "My path is \"/users/\"",
            "match": {
              "arguments": [
                {
                  "val": "/users/",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 26,
            "name": "I request create with \"jane\", \"d\", \"doejj\", \"123456Aa*\"",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 23
                },
                {
                  "val": "d",
                  "offset": 31
                },
                {
                  "val": "doejj",
                  "offset": 36
                },
                {
                  "val": "123456Aa*",
                  "offset": 45
                }
              ],
              "location": "steps.CREATEUsers.iRequestCreateWith(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1104000000,
              "status": "passed"
            },
            "line": 27,
            "name": "I send POST method",
            "match": {
              "location": "steps.BaseStepDefs.iSendPOSTMethod()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "line": 28,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: \nExpected: \"400\"\n     but: was \"200\"\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat steps.BaseStepDefs.iShouldSeeStatusCode(BaseStepDefs.java:28)\n\tat ✽.I should see status code \"400\"(file:///Users/ecemyilmaz/Desktop/RestAssured_/src/test/java/features/CREATEUsers.feature:29)\n",
              "duration": 1000000,
              "status": "failed"
            },
            "line": 29,
            "name": "I should see status code \"400\"",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:21.394Z",
        "line": 40,
        "name": "Verify non-success scenarios when creating a user with an invalid user credentials",
        "description": "",
        "id": "postusers;verify-non-success-scenarios-when-creating-a-user-with-an-invalid-user-credentials;;9",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 25,
            "name": "My path is \"/users/\"",
            "match": {
              "arguments": [
                {
                  "val": "/users/",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 26,
            "name": "I request create with \"jane\", \"123\", \"doejj\", \"123456Aa*\"",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 23
                },
                {
                  "val": "123",
                  "offset": 31
                },
                {
                  "val": "doejj",
                  "offset": 38
                },
                {
                  "val": "123456Aa*",
                  "offset": 47
                }
              ],
              "location": "steps.CREATEUsers.iRequestCreateWith(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 973000000,
              "status": "passed"
            },
            "line": 27,
            "name": "I send POST method",
            "match": {
              "location": "steps.BaseStepDefs.iSendPOSTMethod()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "line": 28,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: \nExpected: \"400\"\n     but: was \"200\"\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat steps.BaseStepDefs.iShouldSeeStatusCode(BaseStepDefs.java:28)\n\tat ✽.I should see status code \"400\"(file:///Users/ecemyilmaz/Desktop/RestAssured_/src/test/java/features/CREATEUsers.feature:29)\n",
              "duration": 1000000,
              "status": "failed"
            },
            "line": 29,
            "name": "I should see status code \"400\"",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:22.389Z",
        "line": 41,
        "name": "Verify non-success scenarios when creating a user with an invalid user credentials",
        "description": "",
        "id": "postusers;verify-non-success-scenarios-when-creating-a-user-with-an-invalid-user-credentials;;10",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 25,
            "name": "My path is \"/users/\"",
            "match": {
              "arguments": [
                {
                  "val": "/users/",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 26,
            "name": "I request create with \"jane\", \"d\", \"doejj\", \"123456Aa*\"",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 23
                },
                {
                  "val": "d",
                  "offset": 31
                },
                {
                  "val": "doejj",
                  "offset": 36
                },
                {
                  "val": "123456Aa*",
                  "offset": 45
                }
              ],
              "location": "steps.CREATEUsers.iRequestCreateWith(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 985000000,
              "status": "passed"
            },
            "line": 27,
            "name": "I send POST method",
            "match": {
              "location": "steps.BaseStepDefs.iSendPOSTMethod()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "line": 28,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: \nExpected: \"400\"\n     but: was \"200\"\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat steps.BaseStepDefs.iShouldSeeStatusCode(BaseStepDefs.java:28)\n\tat ✽.I should see status code \"400\"(file:///Users/ecemyilmaz/Desktop/RestAssured_/src/test/java/features/CREATEUsers.feature:29)\n",
              "status": "failed"
            },
            "line": 29,
            "name": "I should see status code \"400\"",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:23.392Z",
        "line": 42,
        "name": "Verify non-success scenarios when creating a user with an invalid user credentials",
        "description": "",
        "id": "postusers;verify-non-success-scenarios-when-creating-a-user-with-an-invalid-user-credentials;;11",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 25,
            "name": "My path is \"/users/\"",
            "match": {
              "arguments": [
                {
                  "val": "/users/",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 26,
            "name": "I request create with \"jane\", \"doe?\", \"doejj\", \"123456Aa*\"",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 23
                },
                {
                  "val": "doe?",
                  "offset": 31
                },
                {
                  "val": "doejj",
                  "offset": 39
                },
                {
                  "val": "123456Aa*",
                  "offset": 48
                }
              ],
              "location": "steps.CREATEUsers.iRequestCreateWith(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1057000000,
              "status": "passed"
            },
            "line": 27,
            "name": "I send POST method",
            "match": {
              "location": "steps.BaseStepDefs.iSendPOSTMethod()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "line": 28,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: \nExpected: \"400\"\n     but: was \"200\"\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat steps.BaseStepDefs.iShouldSeeStatusCode(BaseStepDefs.java:28)\n\tat ✽.I should see status code \"400\"(file:///Users/ecemyilmaz/Desktop/RestAssured_/src/test/java/features/CREATEUsers.feature:29)\n",
              "duration": 1000000,
              "status": "failed"
            },
            "line": 29,
            "name": "I should see status code \"400\"",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:24.469Z",
        "line": 43,
        "name": "Verify non-success scenarios when creating a user with an invalid user credentials",
        "description": "",
        "id": "postusers;verify-non-success-scenarios-when-creating-a-user-with-an-invalid-user-credentials;;12",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 25,
            "name": "My path is \"/users/\"",
            "match": {
              "arguments": [
                {
                  "val": "/users/",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 26,
            "name": "I request create with \"jane\", \"doedoedoedoedoedoedoedoedoedoedoedoedoedoedoedoedoe\", \"doejj\", \"123456Aa*\"",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 23
                },
                {
                  "val": "doedoedoedoedoedoedoedoedoedoedoedoedoedoedoedoedoe",
                  "offset": 31
                },
                {
                  "val": "doejj",
                  "offset": 86
                },
                {
                  "val": "123456Aa*",
                  "offset": 95
                }
              ],
              "location": "steps.CREATEUsers.iRequestCreateWith(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1024000000,
              "status": "passed"
            },
            "line": 27,
            "name": "I send POST method",
            "match": {
              "location": "steps.BaseStepDefs.iSendPOSTMethod()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "line": 28,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: \nExpected: \"400\"\n     but: was \"200\"\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat steps.BaseStepDefs.iShouldSeeStatusCode(BaseStepDefs.java:28)\n\tat ✽.I should see status code \"400\"(file:///Users/ecemyilmaz/Desktop/RestAssured_/src/test/java/features/CREATEUsers.feature:29)\n",
              "duration": 1000000,
              "status": "failed"
            },
            "line": 29,
            "name": "I should see status code \"400\"",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:25.513Z",
        "line": 44,
        "name": "Verify non-success scenarios when creating a user with an invalid user credentials",
        "description": "",
        "id": "postusers;verify-non-success-scenarios-when-creating-a-user-with-an-invalid-user-credentials;;13",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 25,
            "name": "My path is \"/users/\"",
            "match": {
              "arguments": [
                {
                  "val": "/users/",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 26,
            "name": "I request create with \"jane\", \"doe\", \"\", \"123456Aa*\"",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 23
                },
                {
                  "val": "doe",
                  "offset": 31
                },
                {
                  "val": "",
                  "offset": 38
                },
                {
                  "val": "123456Aa*",
                  "offset": 42
                }
              ],
              "location": "steps.CREATEUsers.iRequestCreateWith(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 951000000,
              "status": "passed"
            },
            "line": 27,
            "name": "I send POST method",
            "match": {
              "location": "steps.BaseStepDefs.iSendPOSTMethod()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "line": 28,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: \nExpected: \"400\"\n     but: was \"200\"\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat steps.BaseStepDefs.iShouldSeeStatusCode(BaseStepDefs.java:28)\n\tat ✽.I should see status code \"400\"(file:///Users/ecemyilmaz/Desktop/RestAssured_/src/test/java/features/CREATEUsers.feature:29)\n",
              "status": "failed"
            },
            "line": 29,
            "name": "I should see status code \"400\"",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:26.484Z",
        "line": 45,
        "name": "Verify non-success scenarios when creating a user with an invalid user credentials",
        "description": "",
        "id": "postusers;verify-non-success-scenarios-when-creating-a-user-with-an-invalid-user-credentials;;14",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 25,
            "name": "My path is \"/users/\"",
            "match": {
              "arguments": [
                {
                  "val": "/users/",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 26,
            "name": "I request create with \"jane\", \"doe\", \"doe\", \"123456Aa*\"",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 23
                },
                {
                  "val": "doe",
                  "offset": 31
                },
                {
                  "val": "doe",
                  "offset": 38
                },
                {
                  "val": "123456Aa*",
                  "offset": 45
                }
              ],
              "location": "steps.CREATEUsers.iRequestCreateWith(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 958000000,
              "status": "passed"
            },
            "line": 27,
            "name": "I send POST method",
            "match": {
              "location": "steps.BaseStepDefs.iSendPOSTMethod()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "line": 28,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: \nExpected: \"400\"\n     but: was \"200\"\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat steps.BaseStepDefs.iShouldSeeStatusCode(BaseStepDefs.java:28)\n\tat ✽.I should see status code \"400\"(file:///Users/ecemyilmaz/Desktop/RestAssured_/src/test/java/features/CREATEUsers.feature:29)\n",
              "status": "failed"
            },
            "line": 29,
            "name": "I should see status code \"400\"",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:27.462Z",
        "line": 46,
        "name": "Verify non-success scenarios when creating a user with an invalid user credentials",
        "description": "",
        "id": "postusers;verify-non-success-scenarios-when-creating-a-user-with-an-invalid-user-credentials;;15",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 25,
            "name": "My path is \"/users/\"",
            "match": {
              "arguments": [
                {
                  "val": "/users/",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 26,
            "name": "I request create with \"jane\", \"doe\", \"doejjdoejjdoe\", \"123456Aa*\"",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 23
                },
                {
                  "val": "doe",
                  "offset": 31
                },
                {
                  "val": "doejjdoejjdoe",
                  "offset": 38
                },
                {
                  "val": "123456Aa*",
                  "offset": 55
                }
              ],
              "location": "steps.CREATEUsers.iRequestCreateWith(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1078000000,
              "status": "passed"
            },
            "line": 27,
            "name": "I send POST method",
            "match": {
              "location": "steps.BaseStepDefs.iSendPOSTMethod()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "line": 28,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: \nExpected: \"400\"\n     but: was \"200\"\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat steps.BaseStepDefs.iShouldSeeStatusCode(BaseStepDefs.java:28)\n\tat ✽.I should see status code \"400\"(file:///Users/ecemyilmaz/Desktop/RestAssured_/src/test/java/features/CREATEUsers.feature:29)\n",
              "status": "failed"
            },
            "line": 29,
            "name": "I should see status code \"400\"",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "PostUsers",
    "description": "  Test POST operation using REST-assured library",
    "id": "postusers",
    "keyword": "Feature",
    "uri": "file:src/test/java/features/CREATEUsers.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2022-07-01T14:13:28.563Z",
        "line": 4,
        "name": "Verify that status code with user list request",
        "description": "",
        "id": "getusers;verify-that-status-code-with-user-list-request",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 5,
            "name": "My path is \"/users/\"",
            "match": {
              "arguments": [
                {
                  "val": "/users/",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1309000000,
              "status": "passed"
            },
            "line": 6,
            "name": "I send GET method",
            "match": {
              "location": "steps.BaseStepDefs.iSendGETMethod()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 7,
            "name": "I should see status code \"200\"",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:29.882Z",
        "line": 16,
        "name": "Verify the user credentials field with user list request",
        "description": "",
        "id": "getusers;verify-the-user-credentials-field-with-user-list-request;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 11,
            "name": "My path is \"/users/\"",
            "match": {
              "arguments": [
                {
                  "val": "/users/",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 938000000,
              "status": "passed"
            },
            "line": 12,
            "name": "I send GET method",
            "match": {
              "location": "steps.BaseStepDefs.iSendGETMethod()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "line": 13,
            "name": "I should see \"jane\", \"doe\", \"doejj\" credentials",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 14
                },
                {
                  "val": "doe",
                  "offset": 22
                },
                {
                  "val": "doejj",
                  "offset": 29
                }
              ],
              "location": "steps.GETUsers.iShouldSeeCredentials(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:30.835Z",
        "line": 24,
        "name": "Verify that status code with user by id",
        "description": "",
        "id": "getusers;verify-that-status-code-with-user-by-id;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 19,
            "name": "My path is \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "/users",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 952000000,
              "status": "passed"
            },
            "line": 20,
            "name": "I send GET method with \"c4f6c088-f91b-494e-b7f0-a08f48df3180\" user by ID",
            "match": {
              "arguments": [
                {
                  "val": "c4f6c088-f91b-494e-b7f0-a08f48df3180",
                  "offset": 24
                }
              ],
              "location": "steps.GETUsers.iSendGETMethodWithUserByID(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "line": 21,
            "name": "I should see status code \"200\"",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:31.799Z",
        "line": 32,
        "name": "Verify the user credentials field with user by id",
        "description": "",
        "id": "getusers;verify-the-user-credentials-field-with-user-by-id;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 27,
            "name": "My path is \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "/users",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1023000000,
              "status": "passed"
            },
            "line": 28,
            "name": "I send GET method with \"c4f6c088-f91b-494e-b7f0-a08f48df3180\" user by ID",
            "match": {
              "arguments": [
                {
                  "val": "c4f6c088-f91b-494e-b7f0-a08f48df3180",
                  "offset": 24
                }
              ],
              "location": "steps.GETUsers.iSendGETMethodWithUserByID(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "line": 29,
            "name": "I should see single record with \"jane\", \"doe\", \"doejj\" credentials",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 33
                },
                {
                  "val": "doe",
                  "offset": 41
                },
                {
                  "val": "doejj",
                  "offset": 48
                }
              ],
              "location": "steps.GETUsers.iShouldSeeSingleRecordWithCredentials(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "GETUsers",
    "description": "  Verify different GET operations using REST-assured",
    "id": "getusers",
    "keyword": "Feature",
    "uri": "file:src/test/java/features/GETUsers.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2022-07-01T14:13:32.836Z",
        "line": 12,
        "name": "Verify that delete operation successfully",
        "description": "",
        "id": "deleteusers;verify-that-delete-operation-successfully;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 5,
            "name": "My path is \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "/users",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 6,
            "name": "I created a user",
            "match": {
              "location": "steps.REMOVEUsers.iCreatedAUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1029000000,
              "status": "passed"
            },
            "line": 7,
            "name": "I send REMOVE method with \"c4f6c088-f91b-494e-b7f0-a08f48df3180\" userID",
            "match": {
              "arguments": [
                {
                  "val": "c4f6c088-f91b-494e-b7f0-a08f48df3180",
                  "offset": 27
                }
              ],
              "location": "steps.REMOVEUsers.iSendREMOVEMethodWithUserID(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.NullPointerException\n\tat steps.REMOVEUsers.iShouldSeeTheResponseBodyShouldBeAnEmpty(REMOVEUsers.java:35)\n\tat ✽.I should see the response body should be an empty(file:///Users/ecemyilmaz/Desktop/RestAssured_/src/test/java/features/REMOVEUsers.feature:8)\n",
              "duration": 2000000,
              "status": "failed"
            },
            "line": 8,
            "name": "I should see the response body should be an empty",
            "match": {
              "location": "steps.REMOVEUsers.iShouldSeeTheResponseBodyShouldBeAnEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "I should see status code \"200\"",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:33.883Z",
        "line": 22,
        "name": "Verify that delete operation with invalid userID unsuccessful",
        "description": "",
        "id": "deleteusers;verify-that-delete-operation-with-invalid-userid-unsuccessful;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 15,
            "name": "My path is \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "/users",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 16,
            "name": "I created a user",
            "match": {
              "location": "steps.REMOVEUsers.iCreatedAUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 940000000,
              "status": "passed"
            },
            "line": 17,
            "name": "I send REMOVE method with \"invaliduserID-494e-b7f0-a08f48df3180\" userID",
            "match": {
              "arguments": [
                {
                  "val": "invaliduserID-494e-b7f0-a08f48df3180",
                  "offset": 27
                }
              ],
              "location": "steps.REMOVEUsers.iSendREMOVEMethodWithUserID(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "line": 18,
            "name": "I should see the response body should be an empty",
            "match": {
              "location": "steps.REMOVEUsers.iShouldSeeTheResponseBodyShouldBeAnEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: \nExpected: \"403\"\n     but: was \"404\"\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat steps.BaseStepDefs.iShouldSeeStatusCode(BaseStepDefs.java:28)\n\tat ✽.I should see status code \"403\"(file:///Users/ecemyilmaz/Desktop/RestAssured_/src/test/java/features/REMOVEUsers.feature:19)\n",
              "duration": 1000000,
              "status": "failed"
            },
            "line": 19,
            "name": "I should see status code \"403\"",
            "match": {
              "arguments": [
                {
                  "val": "403",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:34.839Z",
        "line": 23,
        "name": "Verify that delete operation with invalid userID unsuccessful",
        "description": "",
        "id": "deleteusers;verify-that-delete-operation-with-invalid-userid-unsuccessful;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 15,
            "name": "My path is \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "/users",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 16,
            "name": "I created a user",
            "match": {
              "location": "steps.REMOVEUsers.iCreatedAUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1008000000,
              "status": "passed"
            },
            "line": 17,
            "name": "I send REMOVE method with \"\" userID",
            "match": {
              "arguments": [
                {
                  "val": "",
                  "offset": 27
                }
              ],
              "location": "steps.REMOVEUsers.iSendREMOVEMethodWithUserID(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.NullPointerException\n\tat steps.REMOVEUsers.iShouldSeeTheResponseBodyShouldBeAnEmpty(REMOVEUsers.java:35)\n\tat ✽.I should see the response body should be an empty(file:///Users/ecemyilmaz/Desktop/RestAssured_/src/test/java/features/REMOVEUsers.feature:18)\n",
              "duration": 2000000,
              "status": "failed"
            },
            "line": 18,
            "name": "I should see the response body should be an empty",
            "match": {
              "location": "steps.REMOVEUsers.iShouldSeeTheResponseBodyShouldBeAnEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 19,
            "name": "I should see status code \"403\"",
            "match": {
              "arguments": [
                {
                  "val": "403",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "DeleteUsers",
    "description": "  Test the delete operation",
    "id": "deleteusers",
    "keyword": "Feature",
    "uri": "file:src/test/java/features/REMOVEUsers.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2022-07-01T14:13:35.859Z",
        "line": 9,
        "name": "Verify that patch operation successfully",
        "description": "",
        "id": "patchusers;verify-that-patch-operation-successfully;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 4,
            "name": "My path is \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "/users",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1078000000,
              "status": "passed"
            },
            "line": 5,
            "name": "I send Patch method with \"c4f6c088-f91b-494e-b7f0-a08f48df3180\" userID , \"true\" active body",
            "match": {
              "arguments": [
                {
                  "val": "\"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
                  "offset": 25
                },
                {
                  "val": "\"true\"",
                  "offset": 73
                }
              ],
              "location": "steps.SWITHUsers.iSendPatchMethodWithUserIDActiveBody(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "I should see status code \"200\"",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:36.950Z",
        "line": 10,
        "name": "Verify that patch operation successfully",
        "description": "",
        "id": "patchusers;verify-that-patch-operation-successfully;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 4,
            "name": "My path is \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "/users",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1102000000,
              "status": "passed"
            },
            "line": 5,
            "name": "I send Patch method with \"c4f6c088-f91b-494e-b7f0-a08f48df3180\" userID , \"false\" active body",
            "match": {
              "arguments": [
                {
                  "val": "\"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
                  "offset": 25
                },
                {
                  "val": "\"false\"",
                  "offset": 73
                }
              ],
              "location": "steps.SWITHUsers.iSendPatchMethodWithUserIDActiveBody(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 6,
            "name": "I should see status code \"200\"",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:38.061Z",
        "line": 18,
        "name": "Verify that patch operation with invalid active body unsuccessfully",
        "description": "",
        "id": "patchusers;verify-that-patch-operation-with-invalid-active-body-unsuccessfully;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 13,
            "name": "My path is \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "/users",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1021000000,
              "status": "passed"
            },
            "line": 14,
            "name": "I send Patch method with \"c4f6c088-f91b-494e-b7f0-a08f48df3180\" userID , \"\" active body",
            "match": {
              "arguments": [
                {
                  "val": "\"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
                  "offset": 25
                },
                {
                  "val": "\"\"",
                  "offset": 73
                }
              ],
              "location": "steps.SWITHUsers.iSendPatchMethodWithUserIDActiveBody(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: \nExpected: \"400\"\n     but: was \"200\"\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat steps.BaseStepDefs.iShouldSeeStatusCode(BaseStepDefs.java:28)\n\tat ✽.I should see status code \"400\"(file:///Users/ecemyilmaz/Desktop/RestAssured_/src/test/java/features/SWITCHUsers.feature:15)\n",
              "duration": 1000000,
              "status": "failed"
            },
            "line": 15,
            "name": "I should see status code \"400\"",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:39.098Z",
        "line": 19,
        "name": "Verify that patch operation with invalid active body unsuccessfully",
        "description": "",
        "id": "patchusers;verify-that-patch-operation-with-invalid-active-body-unsuccessfully;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 13,
            "name": "My path is \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "/users",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1110000000,
              "status": "passed"
            },
            "line": 14,
            "name": "I send Patch method with \"c4f6c088-f91b-494e-b7f0-a08f48df3180\" userID , \"invalid\" active body",
            "match": {
              "arguments": [
                {
                  "val": "\"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
                  "offset": 25
                },
                {
                  "val": "\"invalid\"",
                  "offset": 73
                }
              ],
              "location": "steps.SWITHUsers.iSendPatchMethodWithUserIDActiveBody(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: \nExpected: \"400\"\n     but: was \"200\"\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat steps.BaseStepDefs.iShouldSeeStatusCode(BaseStepDefs.java:28)\n\tat ✽.I should see status code \"400\"(file:///Users/ecemyilmaz/Desktop/RestAssured_/src/test/java/features/SWITCHUsers.feature:15)\n",
              "duration": 1000000,
              "status": "failed"
            },
            "line": 15,
            "name": "I should see status code \"400\"",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "PatchUsers",
    "description": "",
    "id": "patchusers",
    "keyword": "Feature",
    "uri": "file:src/test/java/features/SWITCHUsers.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2022-07-01T14:13:40.219Z",
        "line": 11,
        "name": "Verify that the update operation with valid user credentials successfully",
        "description": "",
        "id": "updateusers;verify-that-the-update-operation-with-valid-user-credentials-successfully;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 4,
            "name": "My path is \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "/users",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 5,
            "name": "I created a user whose firstname is \"jane\" and  lastname is \"doe\"",
            "match": {
              "arguments": [
                {
                  "val": "\"jane\"",
                  "offset": 36
                },
                {
                  "val": "\"doe\"",
                  "offset": 60
                }
              ],
              "location": "steps.UPDATEUsers.iCreatedAUserWhoseFirstnameIsAndLastnameIs(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 987000000,
              "status": "passed"
            },
            "line": 6,
            "name": "I send PUT method with \"ja\" and \"doe\" update \"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
            "match": {
              "arguments": [
                {
                  "val": "\"ja\"",
                  "offset": 23
                },
                {
                  "val": "\"doe\"",
                  "offset": 32
                },
                {
                  "val": "\"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
                  "offset": 45
                }
              ],
              "location": "steps.UPDATEUsers.iSendPUTMethodWithAndUpdate(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "line": 7,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 8,
            "name": "I should see status code \"200\"",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:41.229Z",
        "line": 12,
        "name": "Verify that the update operation with valid user credentials successfully",
        "description": "",
        "id": "updateusers;verify-that-the-update-operation-with-valid-user-credentials-successfully;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 4,
            "name": "My path is \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "/users",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 5,
            "name": "I created a user whose firstname is \"jane\" and  lastname is \"doe\"",
            "match": {
              "arguments": [
                {
                  "val": "\"jane\"",
                  "offset": 36
                },
                {
                  "val": "\"doe\"",
                  "offset": 60
                }
              ],
              "location": "steps.UPDATEUsers.iCreatedAUserWhoseFirstnameIsAndLastnameIs(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 985000000,
              "status": "passed"
            },
            "line": 6,
            "name": "I send PUT method with \"janejanejanejanejanejanejanejanejanejanejanejaneja\" and \"doe\" update \"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
            "match": {
              "arguments": [
                {
                  "val": "\"janejanejanejanejanejanejanejanejanejanejanejaneja\"",
                  "offset": 23
                },
                {
                  "val": "\"doe\"",
                  "offset": 80
                },
                {
                  "val": "\"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
                  "offset": 93
                }
              ],
              "location": "steps.UPDATEUsers.iSendPUTMethodWithAndUpdate(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "line": 7,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "I should see status code \"200\"",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:42.231Z",
        "line": 13,
        "name": "Verify that the update operation with valid user credentials successfully",
        "description": "",
        "id": "updateusers;verify-that-the-update-operation-with-valid-user-credentials-successfully;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 4,
            "name": "My path is \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "/users",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 5,
            "name": "I created a user whose firstname is \"jane\" and  lastname is \"doe\"",
            "match": {
              "arguments": [
                {
                  "val": "\"jane\"",
                  "offset": 36
                },
                {
                  "val": "\"doe\"",
                  "offset": 60
                }
              ],
              "location": "steps.UPDATEUsers.iCreatedAUserWhoseFirstnameIsAndLastnameIs(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1057000000,
              "status": "passed"
            },
            "line": 6,
            "name": "I send PUT method with \"jane\" and \"do\" update \"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
            "match": {
              "arguments": [
                {
                  "val": "\"jane\"",
                  "offset": 23
                },
                {
                  "val": "\"do\"",
                  "offset": 34
                },
                {
                  "val": "\"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
                  "offset": 46
                }
              ],
              "location": "steps.UPDATEUsers.iSendPUTMethodWithAndUpdate(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "line": 7,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 8,
            "name": "I should see status code \"200\"",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:43.307Z",
        "line": 14,
        "name": "Verify that the update operation with valid user credentials successfully",
        "description": "",
        "id": "updateusers;verify-that-the-update-operation-with-valid-user-credentials-successfully;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 4,
            "name": "My path is \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "/users",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 5,
            "name": "I created a user whose firstname is \"jane\" and  lastname is \"doe\"",
            "match": {
              "arguments": [
                {
                  "val": "\"jane\"",
                  "offset": 36
                },
                {
                  "val": "\"doe\"",
                  "offset": 60
                }
              ],
              "location": "steps.UPDATEUsers.iCreatedAUserWhoseFirstnameIsAndLastnameIs(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 946000000,
              "status": "passed"
            },
            "line": 6,
            "name": "I send PUT method with \"jane\" and \"doedoedoedoedoedoedoedoedoedoedoedoedoedoedoedoedo\" update \"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
            "match": {
              "arguments": [
                {
                  "val": "\"jane\"",
                  "offset": 23
                },
                {
                  "val": "\"doedoedoedoedoedoedoedoedoedoedoedoedoedoedoedoedo\"",
                  "offset": 34
                },
                {
                  "val": "\"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
                  "offset": 94
                }
              ],
              "location": "steps.UPDATEUsers.iSendPUTMethodWithAndUpdate(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "line": 7,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "I should see status code \"200\"",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:44.272Z",
        "line": 24,
        "name": "Verify that the update operation with invalid user credentials unsuccessfully",
        "description": "",
        "id": "updateusers;verify-that-the-update-operation-with-invalid-user-credentials-unsuccessfully;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 17,
            "name": "My path is \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "/users",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 18,
            "name": "I created a user whose firstname is \"jane\" and  lastname is \"doe\"",
            "match": {
              "arguments": [
                {
                  "val": "\"jane\"",
                  "offset": 36
                },
                {
                  "val": "\"doe\"",
                  "offset": 60
                }
              ],
              "location": "steps.UPDATEUsers.iCreatedAUserWhoseFirstnameIsAndLastnameIs(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1060000000,
              "status": "passed"
            },
            "line": 19,
            "name": "I send PUT method with \"\" and \"doe\" update \"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 23
                },
                {
                  "val": "\"doe\"",
                  "offset": 30
                },
                {
                  "val": "\"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
                  "offset": 43
                }
              ],
              "location": "steps.UPDATEUsers.iSendPUTMethodWithAndUpdate(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "line": 20,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: \nExpected: \"400\"\n     but: was \"200\"\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat steps.BaseStepDefs.iShouldSeeStatusCode(BaseStepDefs.java:28)\n\tat ✽.I should see status code \"400\"(file:///Users/ecemyilmaz/Desktop/RestAssured_/src/test/java/features/UPDATEUsers.feature:21)\n",
              "duration": 1000000,
              "status": "failed"
            },
            "line": 21,
            "name": "I should see status code \"400\"",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:45.355Z",
        "line": 25,
        "name": "Verify that the update operation with invalid user credentials unsuccessfully",
        "description": "",
        "id": "updateusers;verify-that-the-update-operation-with-invalid-user-credentials-unsuccessfully;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 17,
            "name": "My path is \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "/users",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 18,
            "name": "I created a user whose firstname is \"jane\" and  lastname is \"doe\"",
            "match": {
              "arguments": [
                {
                  "val": "\"jane\"",
                  "offset": 36
                },
                {
                  "val": "\"doe\"",
                  "offset": 60
                }
              ],
              "location": "steps.UPDATEUsers.iCreatedAUserWhoseFirstnameIsAndLastnameIs(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 994000000,
              "status": "passed"
            },
            "line": 19,
            "name": "I send PUT method with \"j\" and \"doe\" update \"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
            "match": {
              "arguments": [
                {
                  "val": "\"j\"",
                  "offset": 23
                },
                {
                  "val": "\"doe\"",
                  "offset": 31
                },
                {
                  "val": "\"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
                  "offset": 44
                }
              ],
              "location": "steps.UPDATEUsers.iSendPUTMethodWithAndUpdate(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "line": 20,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: \nExpected: \"400\"\n     but: was \"200\"\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat steps.BaseStepDefs.iShouldSeeStatusCode(BaseStepDefs.java:28)\n\tat ✽.I should see status code \"400\"(file:///Users/ecemyilmaz/Desktop/RestAssured_/src/test/java/features/UPDATEUsers.feature:21)\n",
              "duration": 1000000,
              "status": "failed"
            },
            "line": 21,
            "name": "I should see status code \"400\"",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:46.363Z",
        "line": 26,
        "name": "Verify that the update operation with invalid user credentials unsuccessfully",
        "description": "",
        "id": "updateusers;verify-that-the-update-operation-with-invalid-user-credentials-unsuccessfully;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 17,
            "name": "My path is \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "/users",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 18,
            "name": "I created a user whose firstname is \"jane\" and  lastname is \"doe\"",
            "match": {
              "arguments": [
                {
                  "val": "\"jane\"",
                  "offset": 36
                },
                {
                  "val": "\"doe\"",
                  "offset": 60
                }
              ],
              "location": "steps.UPDATEUsers.iCreatedAUserWhoseFirstnameIsAndLastnameIs(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 981000000,
              "status": "passed"
            },
            "line": 19,
            "name": "I send PUT method with \"123\" and \"doe\" update \"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
            "match": {
              "arguments": [
                {
                  "val": "\"123\"",
                  "offset": 23
                },
                {
                  "val": "\"doe\"",
                  "offset": 33
                },
                {
                  "val": "\"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
                  "offset": 46
                }
              ],
              "location": "steps.UPDATEUsers.iSendPUTMethodWithAndUpdate(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "line": 20,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: \nExpected: \"400\"\n     but: was \"200\"\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat steps.BaseStepDefs.iShouldSeeStatusCode(BaseStepDefs.java:28)\n\tat ✽.I should see status code \"400\"(file:///Users/ecemyilmaz/Desktop/RestAssured_/src/test/java/features/UPDATEUsers.feature:21)\n",
              "status": "failed"
            },
            "line": 21,
            "name": "I should see status code \"400\"",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:47.363Z",
        "line": 27,
        "name": "Verify that the update operation with invalid user credentials unsuccessfully",
        "description": "",
        "id": "updateusers;verify-that-the-update-operation-with-invalid-user-credentials-unsuccessfully;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 17,
            "name": "My path is \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "/users",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 18,
            "name": "I created a user whose firstname is \"jane\" and  lastname is \"doe\"",
            "match": {
              "arguments": [
                {
                  "val": "\"jane\"",
                  "offset": 36
                },
                {
                  "val": "\"doe\"",
                  "offset": 60
                }
              ],
              "location": "steps.UPDATEUsers.iCreatedAUserWhoseFirstnameIsAndLastnameIs(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1017000000,
              "status": "passed"
            },
            "line": 19,
            "name": "I send PUT method with \"jane?\" and \"doe\" update \"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
            "match": {
              "arguments": [
                {
                  "val": "\"jane?\"",
                  "offset": 23
                },
                {
                  "val": "\"doe\"",
                  "offset": 35
                },
                {
                  "val": "\"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
                  "offset": 48
                }
              ],
              "location": "steps.UPDATEUsers.iSendPUTMethodWithAndUpdate(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "line": 20,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: \nExpected: \"400\"\n     but: was \"200\"\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat steps.BaseStepDefs.iShouldSeeStatusCode(BaseStepDefs.java:28)\n\tat ✽.I should see status code \"400\"(file:///Users/ecemyilmaz/Desktop/RestAssured_/src/test/java/features/UPDATEUsers.feature:21)\n",
              "duration": 1000000,
              "status": "failed"
            },
            "line": 21,
            "name": "I should see status code \"400\"",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:48.398Z",
        "line": 28,
        "name": "Verify that the update operation with invalid user credentials unsuccessfully",
        "description": "",
        "id": "updateusers;verify-that-the-update-operation-with-invalid-user-credentials-unsuccessfully;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 17,
            "name": "My path is \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "/users",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 18,
            "name": "I created a user whose firstname is \"jane\" and  lastname is \"doe\"",
            "match": {
              "arguments": [
                {
                  "val": "\"jane\"",
                  "offset": 36
                },
                {
                  "val": "\"doe\"",
                  "offset": 60
                }
              ],
              "location": "steps.UPDATEUsers.iCreatedAUserWhoseFirstnameIsAndLastnameIs(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1135000000,
              "status": "passed"
            },
            "line": 19,
            "name": "I send PUT method with \"janejanejanejanejanejanejanejanejanejanejanejanejan\" and \"doe\" update \"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
            "match": {
              "arguments": [
                {
                  "val": "\"janejanejanejanejanejanejanejanejanejanejanejanejan\"",
                  "offset": 23
                },
                {
                  "val": "\"doe\"",
                  "offset": 81
                },
                {
                  "val": "\"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
                  "offset": 94
                }
              ],
              "location": "steps.UPDATEUsers.iSendPUTMethodWithAndUpdate(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "line": 20,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: \nExpected: \"400\"\n     but: was \"200\"\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat steps.BaseStepDefs.iShouldSeeStatusCode(BaseStepDefs.java:28)\n\tat ✽.I should see status code \"400\"(file:///Users/ecemyilmaz/Desktop/RestAssured_/src/test/java/features/UPDATEUsers.feature:21)\n",
              "duration": 1000000,
              "status": "failed"
            },
            "line": 21,
            "name": "I should see status code \"400\"",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:49.549Z",
        "line": 29,
        "name": "Verify that the update operation with invalid user credentials unsuccessfully",
        "description": "",
        "id": "updateusers;verify-that-the-update-operation-with-invalid-user-credentials-unsuccessfully;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 17,
            "name": "My path is \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "/users",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 18,
            "name": "I created a user whose firstname is \"jane\" and  lastname is \"doe\"",
            "match": {
              "arguments": [
                {
                  "val": "\"jane\"",
                  "offset": 36
                },
                {
                  "val": "\"doe\"",
                  "offset": 60
                }
              ],
              "location": "steps.UPDATEUsers.iCreatedAUserWhoseFirstnameIsAndLastnameIs(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 992000000,
              "status": "passed"
            },
            "line": 19,
            "name": "I send PUT method with \"jane\" and \"\" update \"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
            "match": {
              "arguments": [
                {
                  "val": "\"jane\"",
                  "offset": 23
                },
                {
                  "val": "\"\"",
                  "offset": 34
                },
                {
                  "val": "\"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
                  "offset": 44
                }
              ],
              "location": "steps.UPDATEUsers.iSendPUTMethodWithAndUpdate(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "line": 20,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: \nExpected: \"400\"\n     but: was \"200\"\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat steps.BaseStepDefs.iShouldSeeStatusCode(BaseStepDefs.java:28)\n\tat ✽.I should see status code \"400\"(file:///Users/ecemyilmaz/Desktop/RestAssured_/src/test/java/features/UPDATEUsers.feature:21)\n",
              "status": "failed"
            },
            "line": 21,
            "name": "I should see status code \"400\"",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:50.557Z",
        "line": 30,
        "name": "Verify that the update operation with invalid user credentials unsuccessfully",
        "description": "",
        "id": "updateusers;verify-that-the-update-operation-with-invalid-user-credentials-unsuccessfully;;8",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 17,
            "name": "My path is \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "/users",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 18,
            "name": "I created a user whose firstname is \"jane\" and  lastname is \"doe\"",
            "match": {
              "arguments": [
                {
                  "val": "\"jane\"",
                  "offset": 36
                },
                {
                  "val": "\"doe\"",
                  "offset": 60
                }
              ],
              "location": "steps.UPDATEUsers.iCreatedAUserWhoseFirstnameIsAndLastnameIs(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 938000000,
              "status": "passed"
            },
            "line": 19,
            "name": "I send PUT method with \"jane\" and \"d\" update \"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
            "match": {
              "arguments": [
                {
                  "val": "\"jane\"",
                  "offset": 23
                },
                {
                  "val": "\"d\"",
                  "offset": 34
                },
                {
                  "val": "\"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
                  "offset": 45
                }
              ],
              "location": "steps.UPDATEUsers.iSendPUTMethodWithAndUpdate(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "line": 20,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: \nExpected: \"400\"\n     but: was \"200\"\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat steps.BaseStepDefs.iShouldSeeStatusCode(BaseStepDefs.java:28)\n\tat ✽.I should see status code \"400\"(file:///Users/ecemyilmaz/Desktop/RestAssured_/src/test/java/features/UPDATEUsers.feature:21)\n",
              "status": "failed"
            },
            "line": 21,
            "name": "I should see status code \"400\"",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:51.513Z",
        "line": 31,
        "name": "Verify that the update operation with invalid user credentials unsuccessfully",
        "description": "",
        "id": "updateusers;verify-that-the-update-operation-with-invalid-user-credentials-unsuccessfully;;9",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 17,
            "name": "My path is \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "/users",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 18,
            "name": "I created a user whose firstname is \"jane\" and  lastname is \"doe\"",
            "match": {
              "arguments": [
                {
                  "val": "\"jane\"",
                  "offset": 36
                },
                {
                  "val": "\"doe\"",
                  "offset": 60
                }
              ],
              "location": "steps.UPDATEUsers.iCreatedAUserWhoseFirstnameIsAndLastnameIs(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1097000000,
              "status": "passed"
            },
            "line": 19,
            "name": "I send PUT method with \"jane\" and \"123\" update \"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
            "match": {
              "arguments": [
                {
                  "val": "\"jane\"",
                  "offset": 23
                },
                {
                  "val": "\"123\"",
                  "offset": 34
                },
                {
                  "val": "\"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
                  "offset": 47
                }
              ],
              "location": "steps.UPDATEUsers.iSendPUTMethodWithAndUpdate(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "line": 20,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: \nExpected: \"400\"\n     but: was \"200\"\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat steps.BaseStepDefs.iShouldSeeStatusCode(BaseStepDefs.java:28)\n\tat ✽.I should see status code \"400\"(file:///Users/ecemyilmaz/Desktop/RestAssured_/src/test/java/features/UPDATEUsers.feature:21)\n",
              "duration": 1000000,
              "status": "failed"
            },
            "line": 21,
            "name": "I should see status code \"400\"",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:52.629Z",
        "line": 32,
        "name": "Verify that the update operation with invalid user credentials unsuccessfully",
        "description": "",
        "id": "updateusers;verify-that-the-update-operation-with-invalid-user-credentials-unsuccessfully;;10",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 17,
            "name": "My path is \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "/users",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 18,
            "name": "I created a user whose firstname is \"jane\" and  lastname is \"doe\"",
            "match": {
              "arguments": [
                {
                  "val": "\"jane\"",
                  "offset": 36
                },
                {
                  "val": "\"doe\"",
                  "offset": 60
                }
              ],
              "location": "steps.UPDATEUsers.iCreatedAUserWhoseFirstnameIsAndLastnameIs(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 905000000,
              "status": "passed"
            },
            "line": 19,
            "name": "I send PUT method with \"jane\" and \"d\" update \"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
            "match": {
              "arguments": [
                {
                  "val": "\"jane\"",
                  "offset": 23
                },
                {
                  "val": "\"d\"",
                  "offset": 34
                },
                {
                  "val": "\"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
                  "offset": 45
                }
              ],
              "location": "steps.UPDATEUsers.iSendPUTMethodWithAndUpdate(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "line": 20,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: \nExpected: \"400\"\n     but: was \"200\"\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat steps.BaseStepDefs.iShouldSeeStatusCode(BaseStepDefs.java:28)\n\tat ✽.I should see status code \"400\"(file:///Users/ecemyilmaz/Desktop/RestAssured_/src/test/java/features/UPDATEUsers.feature:21)\n",
              "duration": 1000000,
              "status": "failed"
            },
            "line": 21,
            "name": "I should see status code \"400\"",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:53.553Z",
        "line": 33,
        "name": "Verify that the update operation with invalid user credentials unsuccessfully",
        "description": "",
        "id": "updateusers;verify-that-the-update-operation-with-invalid-user-credentials-unsuccessfully;;11",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 17,
            "name": "My path is \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "/users",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 18,
            "name": "I created a user whose firstname is \"jane\" and  lastname is \"doe\"",
            "match": {
              "arguments": [
                {
                  "val": "\"jane\"",
                  "offset": 36
                },
                {
                  "val": "\"doe\"",
                  "offset": 60
                }
              ],
              "location": "steps.UPDATEUsers.iCreatedAUserWhoseFirstnameIsAndLastnameIs(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1100000000,
              "status": "passed"
            },
            "line": 19,
            "name": "I send PUT method with \"jane\" and \"doe?\" update \"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
            "match": {
              "arguments": [
                {
                  "val": "\"jane\"",
                  "offset": 23
                },
                {
                  "val": "\"doe?\"",
                  "offset": 34
                },
                {
                  "val": "\"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
                  "offset": 48
                }
              ],
              "location": "steps.UPDATEUsers.iSendPUTMethodWithAndUpdate(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "line": 20,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: \nExpected: \"400\"\n     but: was \"200\"\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat steps.BaseStepDefs.iShouldSeeStatusCode(BaseStepDefs.java:28)\n\tat ✽.I should see status code \"400\"(file:///Users/ecemyilmaz/Desktop/RestAssured_/src/test/java/features/UPDATEUsers.feature:21)\n",
              "status": "failed"
            },
            "line": 21,
            "name": "I should see status code \"400\"",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-07-01T14:13:54.673Z",
        "line": 34,
        "name": "Verify that the update operation with invalid user credentials unsuccessfully",
        "description": "",
        "id": "updateusers;verify-that-the-update-operation-with-invalid-user-credentials-unsuccessfully;;12",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 17,
            "name": "My path is \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "/users",
                  "offset": 12
                }
              ],
              "location": "steps.BaseStepDefs.myPathIs(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 18,
            "name": "I created a user whose firstname is \"jane\" and  lastname is \"doe\"",
            "match": {
              "arguments": [
                {
                  "val": "\"jane\"",
                  "offset": 36
                },
                {
                  "val": "\"doe\"",
                  "offset": 60
                }
              ],
              "location": "steps.UPDATEUsers.iCreatedAUserWhoseFirstnameIsAndLastnameIs(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 970000000,
              "status": "passed"
            },
            "line": 19,
            "name": "I send PUT method with \"jane\" and \"doedoedoedoedoedoedoedoedoedoedoedoedoedoedoedoedoe\" update \"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
            "match": {
              "arguments": [
                {
                  "val": "\"jane\"",
                  "offset": 23
                },
                {
                  "val": "\"doedoedoedoedoedoedoedoedoedoedoedoedoedoedoedoedoe\"",
                  "offset": 34
                },
                {
                  "val": "\"c4f6c088-f91b-494e-b7f0-a08f48df3180\"",
                  "offset": 95
                }
              ],
              "location": "steps.UPDATEUsers.iSendPUTMethodWithAndUpdate(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "line": 20,
            "name": "I should see the body has id as not empty",
            "match": {
              "location": "steps.CREATEUsers.iShouldSeeTheBodyHasIdAsNotEmpty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: \nExpected: \"400\"\n     but: was \"200\"\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat steps.BaseStepDefs.iShouldSeeStatusCode(BaseStepDefs.java:28)\n\tat ✽.I should see status code \"400\"(file:///Users/ecemyilmaz/Desktop/RestAssured_/src/test/java/features/UPDATEUsers.feature:21)\n",
              "duration": 1000000,
              "status": "failed"
            },
            "line": 21,
            "name": "I should see status code \"400\"",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "steps.BaseStepDefs.iShouldSeeStatusCode(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "UpdateUsers",
    "description": "",
    "id": "updateusers",
    "keyword": "Feature",
    "uri": "file:src/test/java/features/UPDATEUsers.feature",
    "tags": []
  }
]